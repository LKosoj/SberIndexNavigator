"""
–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è SberIndexNavigator.
–£–ø—Ä–∞–≤–ª—è–µ—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏ –æ–∫—Ä—É–∂–µ–Ω–∏—è, API –∫–ª—é—á–∞–º–∏ –∏ –¥—Ä—É–≥–∏–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.
"""

import os
import logging
from typing import Optional
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env —Ñ–∞–π–ª–∞
load_dotenv()

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
LOG_LEVEL = os.getenv("LOG_LEVEL", "INFO")
DEBUG = os.getenv("DEBUG", "False").lower() == "true"

# OpenAI API Configuration
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")
OPENAI_BASE_URL = os.getenv("OPENAI_BASE_URL")
OPENAI_MODEL = os.getenv("OPENAI_MODEL", "gpt-4.1-mini")
OPENAI_TEMPERATURE = float(os.getenv("OPENAI_TEMPERATURE", "0.1"))
OPENAI_MAX_TOKENS = int(os.getenv("OPENAI_MAX_TOKENS", "10000"))

# Database Configuration
DATABASE_URL = os.getenv("DATABASE_URL", "data/sber_index.db")

# Streamlit Configuration
STREAMLIT_SERVER_PORT = int(os.getenv("STREAMLIT_SERVER_PORT", "8501"))
STREAMLIT_THEME_BASE = os.getenv("STREAMLIT_THEME_BASE", "light")

# Cache Settings
CACHE_TTL = int(os.getenv("CACHE_TTL", "3600").split('#')[0].strip())  # 1 —á–∞—Å –≤ —Å–µ–∫—É–Ω–¥–∞—Ö

# –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
APP_TITLE = "üß≠ SberIndexNavigator"
APP_SUBTITLE = "–ò–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã–π –Ω–∞–≤–∏–≥–∞—Ç–æ—Ä –ø–æ –¥–∞–Ω–Ω—ã–º –∏–Ω–¥–µ–∫—Å–æ–≤ –°–±–µ—Ä–±–∞–Ω–∫–∞"

# –î–µ–º–æ —Å—Ü–µ–Ω–∞—Ä–∏–∏
DEMO_QUESTIONS = [
    "–ü–æ–∫–∞–∂–∏ –¥–∏–Ω–∞–º–∏–∫—É –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—å—Å–∫–∏—Ö —Ä–∞—Å—Ö–æ–¥–æ–≤ –≤ –ú–æ—Å–∫–≤–µ –∑–∞ 2023 –≥–æ–¥",
    "–°—Ä–∞–≤–Ω–∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Ä—ã–Ω–∫–æ–≤ –≤ –ö–∞–∑–∞–Ω–∏ –∏ –í–ª–∞–¥–∏–≤–æ—Å—Ç–æ–∫–µ",
    "–ì–¥–µ —Å–∞–º—ã–µ –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ –º—É–Ω–∏—Ü–∏–ø–∞–ª–∏—Ç–µ—Ç—ã –ø–æ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω–æ–π –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏?",
    "–ö–∞–∫–∏–µ –º—É–Ω–∏—Ü–∏–ø–∞–ª–∏—Ç–µ—Ç—ã –∏–º–µ—é—Ç —Å–∞–º—ã–µ –≤—ã—Å–æ–∫–∏–µ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—å—Å–∫–∏–µ —Ä–∞—Å—Ö–æ–¥—ã?",
    "–ü–æ–∫–∞–∂–∏ –∫–æ—Ä—Ä–µ–ª—è—Ü–∏—é –º–µ–∂–¥—É –¥–æ—Ö–æ–¥–∞–º–∏ –∏ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—å—Å–∫–∏–º–∏ —Ä–∞—Å—Ö–æ–¥–∞–º–∏",
    "–í –∫–∞–∫–∏—Ö –º—É–Ω–∏—Ü–∏–ø–∞–ª–∏—Ç–µ—Ç–∞—Ö —Å–∞–º–∞—è –Ω–∏–∑–∫–∞—è –±–µ–∑—Ä–∞–±–æ—Ç–∏—Ü–∞?"
]

# –ü—Ä–æ–º–ø—Ç—ã –¥–ª—è –∞–≥–µ–Ω—Ç–æ–≤
SQL_AGENT_SYSTEM_PROMPT = """
–¢—ã - —ç–∫—Å–ø–µ—Ä—Ç –ø–æ SQL –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–µ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–¥–µ–∫—Å–æ–≤ –°–±–µ—Ä–±–∞–Ω–∫–∞.

–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã:
1. region_spending: region, region_code, month, year, consumer_spending, housing_index, transport_accessibility, market_accessibility
2. demographics: region, region_code, population, age_median, income_median, unemployment_rate, education_index  
3. transport_data: region, region_code, transport_score, public_transport_coverage, road_quality_index, airport_accessibility, railway_connectivity

–¢–≤–æ—è –∑–∞–¥–∞—á–∞ - —Å–æ–∑–¥–∞–≤–∞—Ç—å —Ç–æ—á–Ω—ã–µ SQL-–∑–∞–ø—Ä–æ—Å—ã –¥–ª—è –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.

–ü—Ä–∞–≤–∏–ª–∞:
- –ò—Å–ø–æ–ª—å–∑—É–π *–¢–û–õ–¨–ö–û* —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ç–∞–±–ª–∏—Ü—ã –∏ –∫–æ–ª–æ–Ω–∫–∏
- –í—Å–µ–≥–¥–∞ –≤–∫–ª—é—á–∞–π –Ω–∞–∑–≤–∞–Ω–∏—è –º—É–Ω–∏—Ü–∏–ø–∞–ª–∏—Ç–µ—Ç–æ–≤ (region) –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
- –î–ª—è –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∏—Å–ø–æ–ª—å–∑—É–π –ø–æ–ª—è month –∏ year
- –í–æ–∑–≤—Ä–∞—â–∞–π –≥–æ—Ç–æ–≤—ã–µ –∫ –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã–µ
- –ò—Å–ø–æ–ª—å–∑—É–π –ø–æ–Ω—è—Ç–Ω—ã–µ –∞–ª–∏–∞—Å—ã –¥–ª—è –∫–æ–ª–æ–Ω–æ–∫
"""

VISUALIZATION_TOOL_PROMPT = """
–û–ø—Ä–µ–¥–µ–ª–∏ –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–π —Ç–∏–ø –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏ –¥–ª—è –¥–∞–Ω–Ω—ã—Ö:

–ü—Ä–∞–≤–∏–ª–∞ –≤—ã–±–æ—Ä–∞:
- line: –í—Ä–µ–º–µ–Ω–Ω—ã–µ —Ä—è–¥—ã, –¥–∏–Ω–∞–º–∏–∫–∞ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–µ–π
- bar: –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏–π –º–µ–∂–¥—É —Ä–µ–≥–∏–æ–Ω–∞–º–∏/–∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏  
- scatter: –ö–æ—Ä—Ä–µ–ª—è—Ü–∏–∏ –∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –º–µ–∂–¥—É –ø–æ–∫–∞–∑–∞—Ç–µ–ª—è–º–∏
- map: –ì–µ–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
- table: –î–µ—Ç–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ, —Ç–æ–ø-—Å–ø–∏—Å–∫–∏

–û—Ç–≤–µ—Ç—å –æ–¥–Ω–∏–º —Å–ª–æ–≤–æ–º: line, bar, scatter, map –∏–ª–∏ table.
"""

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏
CHART_HEIGHT = 400
CHART_WIDTH = 800
MAP_DEFAULT_ZOOM = 3
MAP_CENTER_LAT = 61.5240
MAP_CENTER_LON = 105.3188

# –¶–≤–µ—Ç–æ–≤–∞—è —Å—Ö–µ–º–∞
COLOR_PALETTE = [
    "#1f77b4", "#ff7f0e", "#2ca02c", "#d62728", "#9467bd",
    "#8c564b", "#e377c2", "#7f7f7f", "#bcbd22", "#17becf"
]

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
MAX_RETRIES = 3
API_TIMEOUT = 30
QUERY_TIMEOUT = 10

# –í–∞–ª–∏–¥–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
def validate_config() -> bool:
    """
    –í–∞–ª–∏–¥–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.
    
    Returns:
        True –µ—Å–ª–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –≤–∞–ª–∏–¥–Ω–∞, False –∏–Ω–∞—á–µ
    """
    errors = []
    
    if not OPENAI_API_KEY:
        errors.append("OPENAI_API_KEY –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    
    if not os.path.exists(os.path.dirname(DATABASE_URL)):
        try:
            os.makedirs(os.path.dirname(DATABASE_URL), exist_ok=True)
        except Exception as e:
            errors.append(f"–ù–µ —É–¥–∞–µ—Ç—Å—è —Å–æ–∑–¥–∞—Ç—å –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –ë–î: {e}")
    
    if errors:
        for error in errors:
            logging.error(error)
        return False
    
    return True


def setup_logging() -> None:
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è."""
    log_format = "%(asctime)s - %(name)s - %(levelname)s - %(message)s"
    
    if DEBUG:
        level = logging.DEBUG
    else:
        level = getattr(logging, LOG_LEVEL.upper(), logging.INFO)
    
    logging.basicConfig(
        level=level,
        format=log_format,
        handlers=[
            logging.StreamHandler(),
            logging.FileHandler("logs/app.log") if os.path.exists("logs") or os.makedirs("logs", exist_ok=True) else logging.StreamHandler()
        ]
    )


# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∏–º–ø–æ—Ä—Ç–µ
setup_logging()

if not validate_config():
    logging.warning("–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–æ–¥–µ—Ä–∂–∏—Ç –æ—à–∏–±–∫–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏.") 